dbrp "telemetry"."autogen"

// Define a batch query that retrieves 1 minute realtime data every 1s
// It's a good practice to use a tag ('hostname,ifName') in the groupBy statement instead of * (star)
// With the last statement we ensure that we get the last (fresh) entry

var interface_info = batch
                |query('select max(ifHighSpeed) as ifHighSpeed FROM "telemetry"."autogen"."ios_xr_interface_info"')
                    .period(1m)
                    .every(1m)
                    .align()
                    .groupBy(time(1m),'hostname','ifName')
                //|where(lambda: "ipAddress" != '')

var interface_snmp = batch
                |query('select max(ifIndex) as ifIndex FROM "telemetry"."autogen"."ios_xr_interface_snmp"')
                    .period(1m)
                    .every(1m)
                    .align()
                    .groupBy(time(1m),'hostname','ifName')
var interface_counters = batch
                |query('select max(ifInErrors) as ifInErrors, max(ifHCOutOctets) as ifHCOutOctets FROM "telemetry"."autogen"."ios_xr_interface_counters"')
                    .period(1m)
                    .every(1m)
		    .align()
                    .groupBy(time(1m),'hostname','ifName')

var interface_statistics = interface_info
               |join(interface_counters,interface_snmp)
                    .as('interface_info','interface_counters','interface_snmp')
               |eval(lambda: string("interface_snmp.ifIndex") ,
                     lambda: "interface_counters.ifHCOutOctets", 
                     lambda: "interface_counters.ifInErrors",
                     lambda: "interface_info.ifHighSpeed")
                    .as('ifIndex', 'ifHCOutOctets','ifInErrors','ifHighSpeed')
                    .tags('ifIndex')
               |influxDBOut()
	                .database('telemetry')
			.measurement('interface_statistics')
